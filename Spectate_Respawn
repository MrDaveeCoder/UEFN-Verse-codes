using {/Fortnite.com/Devices}
using {/UnrealEngine.com/Temporary/Diagnostics}
using {/Fortnite.com/Teams}
using {/Verse.org/Simulation}
using {/Fortnite.com/Characters}
using {/Verse.org/Random}
using {/Fortnite.com/Game}
using {/Fortnite.com/FortPlayerUtilities}
using {/UnrealEngine.com/Temporary/SpatialMath}

 __  __      ____                       
|  \/  |_ __|  _ \  __ ___   _____  ___ 
| |\/| | '__| | | |/ _` \ \ / / _ \/ _ \
| |  | | |  | |_| | (_| |\ V /  __/  __/
|_|  |_|_|  |____/ \__,_| \_/ \___|\___|

Spectate_Respawn := class(creative_device):

    # This respawnposition will determin where the player will face after respawn. This is in default settings but if you need to you can change the X, Y, Z.
    respawnposition: vector3 = vector3{X:= 250.00, Y:= 0.01, Z:= 0.0}

    # For this create a modal dialog variant widget and add a button. After that add the widget into a pop up dialog device and use that as a button for the respawn.
    @editable
    PopUpDialog : popup_dialog_device = popup_dialog_device{}

    # Two player spawner for both of the players.
    @editable
    SpawnerTeam1 : teleporter_device = teleporter_device{}
    @editable
    SpawnerTeam2 : teleporter_device = teleporter_device{}

    # If the player respawns then he gets back while switchting to this class.
    @editable
    ClassNormal : class_and_team_selector_device = class_and_team_selector_device{}

    # This is the system for the respawn.
    NowRespawn(Agent: agent)<suspends>:void=
        Sleep(0.5)
        Agent.Respawn(respawnposition, rotation{})
        SpawnerTeam1.Teleport(Agent)
        SpawnerTeam2.Teleport(Agent)
        Sleep(1.5)
        ClassNormal.ChangeClass(Agent)

    RespondingButton1(Agent : agent, Index : int):void=
        spawn{NowRespawn(Agent)}

    # Button press event for the pop up dialog device.
    OnBegin<override>()<suspends>:void=
        PopUpDialog.RespondingButtonEvent.Subscribe(RespondingButton1)
